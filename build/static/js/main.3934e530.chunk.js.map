{"version":3,"sources":["Credentials.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","Credentials","props","onClick","googleAuthProvider","auth","GoogleAuthProvider","signInWithPopup","signOut","isSignedIn","user","providerId","style","height","overflow","JSON","stringify","filter","Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4JAYIA,E,iCCZW,G,MAAA,IAA0B,kC,qFDczCA,EAAS,CACPC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,6CAETC,IAASC,cAAcR,G,IAEFS,E,kDACnB,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,OACI,cAAC,IAAD,2BAA0BV,GAA1B,IAAkCO,SAAUA,IAA5C,SACE,gCACE,wBACII,QAAS,WACP,IAAMC,EAAqB,IAAIL,IAASM,KAAKC,mBAC7CP,IAASM,OAAOE,gBAAgBH,IAHtC,iCAgBA,wBACID,QAAS,WACPJ,IAASM,OAAOG,WAFtB,sBAOA,cAAC,IAAD,UACG,YAAuC,IAApCC,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpB,OACI,qBAAKC,MAAO,CAAEC,OAAQ,IAAKC,SAAU,QAArC,SACHC,KAAKC,UAAU,CAAEP,aAAYC,OAAMC,cAAc,KAAM,QAK5D,gCACE,cAAC,IAAD,UACG,WACC,OAAO,2DAGX,cAAC,IAAD,CACIM,OAAQ,kBAAmC,cAAnC,EAAGN,YADf,SAGG,YAAqB,IAAlBA,EAAiB,EAAjBA,WACF,OAAO,8DAAiCA,qB,GAnDjBO,aEA1BC,MApBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,qBAAKH,UAAU,cAAf,SAA6B,cAAC,EAAD,MAE7B,mBACEA,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3934e530.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\nimport firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport {\n  FirebaseAuthProvider,\n  FirebaseAuthConsumer,\n  IfFirebaseAuthed,\n  IfFirebaseAuthedAnd\n} from \"@react-firebase/auth\";\nimport withFirebaseAuth from 'react-with-firebase-auth'\n\nlet config;\n\nconfig = {\n  apiKey: \"AIzaSyAWOO1JIk36pSonbD_M4vPZngmVrM7N5L0\",\n  authDomain: \"ics427-kbad-d5aca.firebaseapp.com\",\n  projectId: \"ics427-kbad-d5aca\",\n  storageBucket: \"ics427-kbad-d5aca.appspot.com\",\n  messagingSenderId: \"754427388390\",\n  appId: \"1:754427388390:web:67b5680e4d2d7c8e52b627\"\n};\nfirebase.initializeApp(config);\n\nexport default class Credentials extends Component {\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    return (\n        <FirebaseAuthProvider {...config} firebase={firebase} >\n          <div>\n            <button\n                onClick={() => {\n                  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n                  firebase.auth().signInWithPopup(googleAuthProvider);\n                }}\n            >\n              Sign In with Google\n            </button>\n            {/*<button*/}\n            {/*    data-testid=\"signin-anon\"*/}\n            {/*    onClick={() => {*/}\n            {/*      firebase.auth().signInAnonymously();*/}\n            {/*    }}*/}\n            {/*>*/}\n            {/*  Sign In Anonymously*/}\n            {/*</button>*/}\n            <button\n                onClick={() => {\n                  firebase.auth().signOut();\n                }}\n            >\n              Sign Out\n            </button>\n            <FirebaseAuthConsumer>\n              {({ isSignedIn, user, providerId }) => {\n                return (\n                    <pre style={{ height: 300, overflow: \"auto\" }}>\n                {JSON.stringify({ isSignedIn, user, providerId }, null, 2)}\n              </pre>\n                );\n              }}\n            </FirebaseAuthConsumer>\n            <div>\n              <IfFirebaseAuthed>\n                {() => {\n                  return <div>You are authenticated</div>;\n                }}\n              </IfFirebaseAuthed>\n              <IfFirebaseAuthedAnd\n                  filter={({ providerId }) => providerId !== \"anonymous\"}\n              >\n                {({ providerId }) => {\n                  return <div>You are authenticated with {providerId}</div>;\n                }}\n              </IfFirebaseAuthedAnd>\n            </div>\n          </div>\n        </FirebaseAuthProvider>\n\n    )}\n}\n\n\n\n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Credentials from './Credentials';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div className=\"Credentials\"><Credentials/></div>\n\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}